select employee_id, commission_pct, nvl(commission_pct,0)
from employees;

select employee_id, last_name, salary+salary*commission_pct as 월급여
from employees;

select employee_id, last_name, salary+salary*nvl(commission_pct,0) as 월급여
from employees;

select employee_id, last_name, salary+salary*nvl(commission_pct,0) as 월급여,
       nvl2(commission_pct,'영원사원','일반사원') as 비고
from employees;

-- 숫자열에 글자를 넣을 수는 없음. to char로 변환 
select employee_id, last_name, nvl(to_char(manager_id),'No Manager')
from employees;

select employee_id, last_name, commission_pct, manager_id,
       coalesce(commission_pct, manager_id, 1)
from employees;

select last_name,
upper(concat(substr(last_name,1,4),'_US'))
from employees
where department_id = 60;

select last_name,
       nvl(to_char(manager_id),'No Manager')
from employees
where manager_id is null;

select to_char(next_day(add_months(hire_date,6),'금요일'),
       'YYYY-MM-DD day') as "Next 6 Month to Review"
from employees
order by hire_date;

-- 조건표현식
-- 데이터베이스(sql)에서 해결할 수 있는 건 여기에서 하는게 성능상 효율적
-- DB에선 한번에 읽어서 한번에 출력
-- 프로그램에서 해결할 수도 있기는 함.
-- if문 하나마다 테이블을 한번씩 다 읽음.
select employee_id, last_name, department_id, salary,
       case department_id when 50 then salary*1.05
                          when 60 then salary*1.1
                          when 80 then salary*1.15
                          
--     case when department_id=50 then salary*1.05
--          when department_id=60 then salary*1.1
--          when department_id=80 then salary*1.15

--     case when department_id < 50 then salary*1.05
--          when department_id between 50 and 80 then salary*1.1
            else salary
       end as 인상된급여
from employees;

select employee_id, last_name, department_id, salary,
       decode(department_id, 50, salary*1.05,
                             60,  salary*1.1,
                             80, salary*1.15,
            salary) as 인상된급여
from employees;

-- sql내역에서 복사
select employee_id, last_name, salary+salary*nvl(commission_pct,0) as 월급여,
       nvl2(commission_pct,'영원사원','일반사원') as 비고
from employees;	

-- nvl2가 없을 때 case문으로 대체
select employee_id, last_name, salary+salary*nvl(commission_pct,0) as 월급여,
       case when commission_pct is not null then '영업사원'
            else '일반사원'
            end 비고
from employees;












