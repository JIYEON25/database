create table test(id number(5), name char(10), address varchar2(50));

create table user1(
idx number primary key,
id varchar2(10) unique,
name varchar2(10) not null,
phone varchar2(15),
address varchar2(50),
score number(6,2) check(score>=0 and score<=100),
subject_code number(5),
hire_date date default sysdate,
marriage char(1) default 'N' check(marriage in('Y','N'))
);

select constraint_name, constraint_type from user_constraints
where table_name='USER1';

create table user2(
    idx number constraint PKIDX primary key,
    id varchar2(10) constraint UNID unique,
    name varchar2(10) constraint NOTNAME not null,
    phone varchar2(15),
    address varchar2(50),
    score number(6,2) constraint CKSCORE check(score>=0 and score<=100),
    subject_code number(5),
    hire_date date default sysdate,
    marriage char(1) default 'N' constraint CKMARR check(marriage in('Y','N'))
);

select constraint_name, constraint_type from user_constraints
where table_name = 'USER2';

ALTER SESSION SET NLS_DATE_FORMAT='RR/MM/DD';

insert into user1(idx, id, name, phone, address, score, subject_code, hire_date, marriage)
values(1,'aaa','kim','010-000-0000','Seoul',75,100,'2010-08-01','Y');

insert into user1(idx, id, name, phone, address, score, subject_code, hire_date, marriage)
values(2,'bbb','lee','010-000-0000','Seoul',75,100,'2010-08-01','N');

select * from tab;

select * from user1;
select * from user2;

desc user1;

alter table test rename to user3;

alter table user3 add phone varchar2(15);

alter table user3 add constraint UID2 unique(id);

alter table user3 add no number primary key;

alter table user3 modify name varchar2(10);

alter table user3 drop column address;

drop table user3;
purge recyclebin;
drop table user3 purge;
flashback table user3 to before drop;


--시퀀스

create sequence idx_sql increment by 2
start with 1 maxvalue 9 cycle nocache;

select idx_sql.nextval from dual;
select idx_sql.currval from dual;

drop sequence idx_sql;

-- 테이블 생성, 시퀀스 적용
create table book(no number primary key, 
                                subject varchar2(50), price number, year date);

create sequence no_seq increment by 1
start with 1 nocycle nocache;

insert into book(no,subject,price,year)
values(no_seq.nextval, '자바 3일 완성', 15000, '2007-03-01');

insert into book(no,subject,price,year)
values(no_seq.nextval, '오라클 무작정 따라하기', 10000, sysdate);

insert into book 
values(no_seq.nextval, 'JSP 달인 되기',18000,'2010-01-01');

select * from book;


-- 테이블 구조 복사
create table user3 as select * from user2 where 1=0;

desc user3;

-- NOT NULL을 제외한 제약조건은 복사가 안됨. sys_***로 복사
select constraint_name, constraint_type, search_condition
from user_constraints where table_name='USER3';

-- 테이블 컬럼 이름 바꿔서 복사 후 레코드 복사
create table user4(bunho, irum, juso)
as select idx, name, address from user1 where id='bbb';

select * from user4;



--------------------

create table dept(deptno number constraint DNO primary key,
                  dname varchar2(30) constraint DNAME not null);
                  
create table emp(empno number constraint ENO primary key,
                 ename varchar2(30) constraint ENAME not null,
                 DEPTNO NUMBER, constraint FKNO foreign key(deptno)
                            references dept on delete set null);

insert into dept(deptno, dname)
values(10,'개발부');

insert into dept(deptno, dname)
values(20,'영업부');

insert into dept(deptno, dname)
values(30,'관리부');

insert into dept(deptno,dname)
values(40,'경리부');

insert into emp(empno, ename, deptno) values(100, '강호동', 10);
insert into emp(empno, ename, deptno) values(101, '아이유', 20);
insert into emp(empno, ename, deptno) values(103, '이효리', 40);
insert into emp(empno, ename) values(105, '장동건');

commit;


delete from dept;
select * from dept;
rollback;

delete from dept where deptno=40;
select * from dept;
select * from emp;

update emp set deptno=30 where ename='장동건';
commit;

-------------------------------------------

create or replace view v_view1
as select employee_id, last_name, department_id from employees
where department_id=90;

create or replace view v_view2
as select employee_id, last_name, salary, department_id from employees
where salary between 5000 and 10000;

select * from v_view2;
update v_view2 set salary=12000 where employee_id=103;
-- 이제 안 보임.
select * from v_view2;

create or replace view v_view3("사번","이름","부서이름")
as select employee_id, last_name, department_name 
from employees join departments using(department_id)
where department_id in (10,90)
order by employee_id;

create or replace view v_view4("사원번호","사원명","급여","입사일","부서명","부서위치")
as select employee_id, last_name, to_char(trunc(salary,-3),'L999,999'),
          to_char(to_date(hire_date, 'RR-MM-DD'),'RRRR-MM-DD'), department_name, city 
from employees join departments using(department_id)
join locations using(location_id) where department_id in(10,90)
order by employee_id;

select * from v_view4;

create or replace view v_view5
as select employee_id, last_name, job_id from employees
where job_id='IT_PROG' with read only;

select * from v_view5;

-- 오류
delete from v_view5;


create or replace view v_view6
as select employee_id, last_name, email, hire_date, job_id
from employees where job_id='IT_PROG'
with check option;

select * from v_view6;


create table bookshop (
    isbn varchar2(10) constraint ISBN primary key,
    title varchar2(50) constraint CTIT not null,
    author varchar2(50),
    price number,
    company varchar(30)
);

select * from v_view6;

create table bookshop (
    isbn varchar2(10) constraint ISBN primary key,
    title varchar2(50) constraint CTIT not null,
    author varchar2(50),
    price number,
    company varchar(30)
);

desc bookshop;

insert into bookshop(isbn, title, author, price, company)
values('is001', '자바3일완성', '김자바', 25000, '야메루출판사');
insert into bookshop(isbn, title, author, price, company)
values('pa002', 'JSP달인되기', '이달인', 28000, '공갈닷컴');
insert into bookshop(isbn, title, author, price, company)
values('or003', '오라클무작정따라하기', '박따라', 23500, '야메루출판사');

select * from bookshop;

create table bookorder (
    idx number primary key,
    isbn varchar2(10) constraint FKISBN references bookshop(isbn),
    qty number 
);

desc bookorder;

create sequence idx_seq increment by 1
start with 1 nomaxvalue nocycle nocache;

insert into bookorder(idx, isbn, qty)
values(1, 'is001', 2);
insert into bookorder(idx, isbn, qty)
values(2, 'or003', 3);
insert into bookorder(idx, isbn, qty)
values(3, 'pa002', 5);
insert into bookorder(idx, isbn, qty)
values(4, 'is001', 3);
insert into bookorder(idx, isbn, qty)
values(5, 'or003', 10);

select * from bookshop;
select * from bookorder;

create or replace view bs_view("책제목","저자","총판매금액")
as select title, author, qty*price
from bookshop join bookorder using(isbn)
with read only;

select * from bs_view;


----------------------------

create or replace view v_view7("부서ID","부서평균")
as select nvl(department_id, 5000), round(avg(salary),-3)
from employees
group by department_id
order by department_id;

select * from v_view7;

select department_name 부서명, 부서최대급여
from (select nvl(department_id, 5000) "부서ID", round(max(salary),-3) "부서최대급여"
      from employees
      group by department_id
      order by department_id) xx join departments yy
      on xx."부서ID" = yy.department_id;

select rownum, last_name, salary
from (select last_name, nvl(salary,0) as salary 
      from employees
      order by 2 desc)
where rownum <= 3;

select rownum, last_name, salary
from (select last_name, nvl(salary,0) as salary
      from employees
      order by 2)
where rownum=1;

select rownum, employee_id, last_name, salary
from (select tt.*, ceil(rownum/3) as page
      from (select * from employees
            order by salary) tt)
where page=2;

select rownum, 사원이름, 부서명, 연봉
from (select last_name as "사원이름", department_name as "부서명",
      to_char((salary*12+(salary*12*nvl(commission_pct,0))),'$99,999,999') as "연봉"
      from employees join departments using(department_id)
      order by 3)
where rownum <= 5;
